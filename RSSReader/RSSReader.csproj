<Project Sdk="Microsoft.NET.Sdk.Web">

	<PropertyGroup>
		<TargetFramework>net5.0</TargetFramework>
		<TypeScriptCompileBlocked>true</TypeScriptCompileBlocked>
		<TypeScriptToolsVersion>Latest</TypeScriptToolsVersion>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<DefaultItemExcludes>$(DefaultItemExcludes);$(SpaRoot)node_modules\**</DefaultItemExcludes>
		<Configurations>Debug;Release;Development</Configurations>
	</PropertyGroup>

	<PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Development|AnyCPU'">
		<Optimize>false</Optimize>
	</PropertyGroup>

	<ItemGroup>
		<PackageReference Include="AutoMapper.Extensions.Microsoft.DependencyInjection" Version="8.1.0" />
		<PackageReference Include="AutoWrapper.Core" Version="4.5.0" />
		<PackageReference Include="Cronos" Version="0.7.1" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="5.0.1" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.EntityFrameworkCore" Version="5.0.1" />
		<PackageReference Include="Microsoft.AspNetCore.Identity.UI" Version="5.0.0" />
		<PackageReference Include="Microsoft.AspNetCore.Mvc.NewtonsoftJson" Version="5.0.1" />
		<PackageReference Include="Microsoft.AspNetCore.SpaServices.Extensions" Version="5.0.0" />
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="5.0.5" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Design" Version="5.0.0">
			<PrivateAssets>all</PrivateAssets>
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.EntityFrameworkCore.Proxies" Version="5.0.1" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Sqlite" Version="5.0.0" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.SqlServer" Version="5.0.0" />
		<PackageReference Include="Microsoft.Extensions.Configuration.Binder" Version="5.0.0" />
		<PackageReference Include="Microsoft.IdentityModel.Tokens" Version="6.8.0" />
		<PackageReference Include="Microsoft.Toolkit.Parsers" Version="6.1.1" />
		<PackageReference Include="NetCore.AutoRegisterDi" Version="2.1.0" />
		<PackageReference Include="Swashbuckle.AspNetCore" Version="6.2.3" />
		<PackageReference Include="Swashbuckle.AspNetCore.Swagger" Version="6.2.3" />
		<PackageReference Include="System.Drawing.Common" Version="6.0.0" />
		<PackageReference Include="System.IdentityModel.Tokens.Jwt" Version="6.8.0" />
	</ItemGroup>

	<ItemGroup>
		<ProjectReference Include="..\DataLayer\DataLayer.csproj" />
		<ProjectReference Include="..\ServiceLayer\ServiceLayer.csproj" />
		<ProjectReference Include="..\Dtos\Dtos.csproj" />
	</ItemGroup>

	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>

	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>

	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />

		<Message Importance="high" Text="Started building development version of the spa ..." Condition=" '$(Configuration)' == 'Development' " />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:development" Condition=" '$(Configuration)' == 'Development' " />
		<Message Importance="high" Text="Started building production version of the spa ..." Condition=" '$(Configuration)' == 'Release' " />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build:production" Condition=" '$(Configuration)' == 'Release' " />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build" Condition=" '$(Configuration)' == 'Debug' " />

		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)build\**" Condition=" '$(Configuration)' == 'Debug' " />
			<DistFiles Include="$(SpaRoot)development\**" Condition=" '$(Configuration)' == 'Development' " />
			<DistFiles Include="$(SpaRoot)production\**" Condition=" '$(Configuration)' == 'Release' " />
			<ResolvedFileToPublish Include="@(DistFiles->'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>%(DistFiles.Identity)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>

</Project>
